// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.17.3
// source: mail.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MailType int32

const (
	MailType_PlayerToPlayer MailType = 0
	MailType_Auction        MailType = 2
	MailType_Creature       MailType = 3
	MailType_GameObject     MailType = 4
	MailType_Calendar       MailType = 5
)

// Enum value maps for MailType.
var (
	MailType_name = map[int32]string{
		0: "PlayerToPlayer",
		2: "Auction",
		3: "Creature",
		4: "GameObject",
		5: "Calendar",
	}
	MailType_value = map[string]int32{
		"PlayerToPlayer": 0,
		"Auction":        2,
		"Creature":       3,
		"GameObject":     4,
		"Calendar":       5,
	}
)

func (x MailType) Enum() *MailType {
	p := new(MailType)
	*p = x
	return p
}

func (x MailType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailType) Descriptor() protoreflect.EnumDescriptor {
	return file_mail_proto_enumTypes[0].Descriptor()
}

func (MailType) Type() protoreflect.EnumType {
	return &file_mail_proto_enumTypes[0]
}

func (x MailType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailType.Descriptor instead.
func (MailType) EnumDescriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{0}
}

type MailStationery int32

const (
	MailStationery_StUnused    MailStationery = 0
	MailStationery_StTest      MailStationery = 1
	MailStationery_StDefault   MailStationery = 41
	MailStationery_StGM        MailStationery = 61
	MailStationery_StAuction   MailStationery = 62
	MailStationery_StValentine MailStationery = 64
	MailStationery_StChristmas MailStationery = 65
	MailStationery_StOrphan    MailStationery = 67
)

// Enum value maps for MailStationery.
var (
	MailStationery_name = map[int32]string{
		0:  "StUnused",
		1:  "StTest",
		41: "StDefault",
		61: "StGM",
		62: "StAuction",
		64: "StValentine",
		65: "StChristmas",
		67: "StOrphan",
	}
	MailStationery_value = map[string]int32{
		"StUnused":    0,
		"StTest":      1,
		"StDefault":   41,
		"StGM":        61,
		"StAuction":   62,
		"StValentine": 64,
		"StChristmas": 65,
		"StOrphan":    67,
	}
)

func (x MailStationery) Enum() *MailStationery {
	p := new(MailStationery)
	*p = x
	return p
}

func (x MailStationery) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailStationery) Descriptor() protoreflect.EnumDescriptor {
	return file_mail_proto_enumTypes[1].Descriptor()
}

func (MailStationery) Type() protoreflect.EnumType {
	return &file_mail_proto_enumTypes[1]
}

func (x MailStationery) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailStationery.Descriptor instead.
func (MailStationery) EnumDescriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{1}
}

type ItemAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid             uint64 `protobuf:"varint,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Entry            uint32 `protobuf:"varint,2,opt,name=entry,proto3" json:"entry,omitempty"`
	Count            uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Flags            uint32 `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	Durability       int32  `protobuf:"varint,5,opt,name=durability,proto3" json:"durability,omitempty"`
	Charges          int32  `protobuf:"varint,6,opt,name=charges,proto3" json:"charges,omitempty"`
	RandomPropertyID uint32 `protobuf:"varint,7,opt,name=randomPropertyID,proto3" json:"randomPropertyID,omitempty"`
	PropertySeed     uint32 `protobuf:"varint,8,opt,name=propertySeed,proto3" json:"propertySeed,omitempty"`
	Text             string `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ItemAttachment) Reset() {
	*x = ItemAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemAttachment) ProtoMessage() {}

func (x *ItemAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemAttachment.ProtoReflect.Descriptor instead.
func (*ItemAttachment) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{0}
}

func (x *ItemAttachment) GetGuid() uint64 {
	if x != nil {
		return x.Guid
	}
	return 0
}

func (x *ItemAttachment) GetEntry() uint32 {
	if x != nil {
		return x.Entry
	}
	return 0
}

func (x *ItemAttachment) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ItemAttachment) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *ItemAttachment) GetDurability() int32 {
	if x != nil {
		return x.Durability
	}
	return 0
}

func (x *ItemAttachment) GetCharges() int32 {
	if x != nil {
		return x.Charges
	}
	return 0
}

func (x *ItemAttachment) GetRandomPropertyID() uint32 {
	if x != nil {
		return x.RandomPropertyID
	}
	return 0
}

func (x *ItemAttachment) GetPropertySeed() uint32 {
	if x != nil {
		return x.PropertySeed
	}
	return 0
}

func (x *ItemAttachment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type SendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api                 string            `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID             uint32            `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	SenderGuid          *uint64           `protobuf:"varint,3,opt,name=senderGuid,proto3,oneof" json:"senderGuid,omitempty"`
	ReceiverGuid        uint64            `protobuf:"varint,4,opt,name=receiverGuid,proto3" json:"receiverGuid,omitempty"`
	Subject             string            `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	Body                string            `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	MoneyToSend         int32             `protobuf:"varint,7,opt,name=moneyToSend,proto3" json:"moneyToSend,omitempty"`
	CashOnDelivery      int32             `protobuf:"varint,8,opt,name=cashOnDelivery,proto3" json:"cashOnDelivery,omitempty"`
	Attachments         []*ItemAttachment `protobuf:"bytes,9,rep,name=attachments,proto3" json:"attachments,omitempty"`
	DeliveryTimestamp   int64             `protobuf:"varint,10,opt,name=deliveryTimestamp,proto3" json:"deliveryTimestamp,omitempty"`
	ExpirationTimestamp int64             `protobuf:"varint,11,opt,name=expirationTimestamp,proto3" json:"expirationTimestamp,omitempty"`
	Type                MailType          `protobuf:"varint,12,opt,name=type,proto3,enum=v1.MailType" json:"type,omitempty"`
	TemplateID          uint32            `protobuf:"varint,13,opt,name=templateID,proto3" json:"templateID,omitempty"`
	Stationery          MailStationery    `protobuf:"varint,14,opt,name=stationery,proto3,enum=v1.MailStationery" json:"stationery,omitempty"`
	FlagsMask           uint32            `protobuf:"varint,15,opt,name=flagsMask,proto3" json:"flagsMask,omitempty"`
}

func (x *SendRequest) Reset() {
	*x = SendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequest) ProtoMessage() {}

func (x *SendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequest.ProtoReflect.Descriptor instead.
func (*SendRequest) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{1}
}

func (x *SendRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *SendRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *SendRequest) GetSenderGuid() uint64 {
	if x != nil && x.SenderGuid != nil {
		return *x.SenderGuid
	}
	return 0
}

func (x *SendRequest) GetReceiverGuid() uint64 {
	if x != nil {
		return x.ReceiverGuid
	}
	return 0
}

func (x *SendRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SendRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *SendRequest) GetMoneyToSend() int32 {
	if x != nil {
		return x.MoneyToSend
	}
	return 0
}

func (x *SendRequest) GetCashOnDelivery() int32 {
	if x != nil {
		return x.CashOnDelivery
	}
	return 0
}

func (x *SendRequest) GetAttachments() []*ItemAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *SendRequest) GetDeliveryTimestamp() int64 {
	if x != nil {
		return x.DeliveryTimestamp
	}
	return 0
}

func (x *SendRequest) GetExpirationTimestamp() int64 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *SendRequest) GetType() MailType {
	if x != nil {
		return x.Type
	}
	return MailType_PlayerToPlayer
}

func (x *SendRequest) GetTemplateID() uint32 {
	if x != nil {
		return x.TemplateID
	}
	return 0
}

func (x *SendRequest) GetStationery() MailStationery {
	if x != nil {
		return x.Stationery
	}
	return MailStationery_StUnused
}

func (x *SendRequest) GetFlagsMask() uint32 {
	if x != nil {
		return x.FlagsMask
	}
	return 0
}

type SendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api    string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	MailID uint32 `protobuf:"varint,2,opt,name=mailID,proto3" json:"mailID,omitempty"`
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{2}
}

func (x *SendResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *SendResponse) GetMailID() uint32 {
	if x != nil {
		return x.MailID
	}
	return 0
}

type MailsForPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api        string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID    uint32 `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	PlayerGuid uint64 `protobuf:"varint,3,opt,name=playerGuid,proto3" json:"playerGuid,omitempty"`
}

func (x *MailsForPlayerRequest) Reset() {
	*x = MailsForPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailsForPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailsForPlayerRequest) ProtoMessage() {}

func (x *MailsForPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailsForPlayerRequest.ProtoReflect.Descriptor instead.
func (*MailsForPlayerRequest) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{3}
}

func (x *MailsForPlayerRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *MailsForPlayerRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *MailsForPlayerRequest) GetPlayerGuid() uint64 {
	if x != nil {
		return x.PlayerGuid
	}
	return 0
}

type MailsForPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api   string  `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Mails []*Mail `protobuf:"bytes,2,rep,name=mails,proto3" json:"mails,omitempty"`
}

func (x *MailsForPlayerResponse) Reset() {
	*x = MailsForPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailsForPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailsForPlayerResponse) ProtoMessage() {}

func (x *MailsForPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailsForPlayerResponse.ProtoReflect.Descriptor instead.
func (*MailsForPlayerResponse) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{4}
}

func (x *MailsForPlayerResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *MailsForPlayerResponse) GetMails() []*Mail {
	if x != nil {
		return x.Mails
	}
	return nil
}

type Mail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sender              uint64            `protobuf:"varint,2,opt,name=sender,proto3" json:"sender,omitempty"`
	ReceiverGuid        uint64            `protobuf:"varint,3,opt,name=receiverGuid,proto3" json:"receiverGuid,omitempty"`
	Subject             string            `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Body                string            `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	MoneyToSend         int32             `protobuf:"varint,6,opt,name=moneyToSend,proto3" json:"moneyToSend,omitempty"`
	CashOnDelivery      int32             `protobuf:"varint,7,opt,name=cashOnDelivery,proto3" json:"cashOnDelivery,omitempty"`
	Attachments         []*ItemAttachment `protobuf:"bytes,8,rep,name=attachments,proto3" json:"attachments,omitempty"`
	DeliveryTimestamp   int64             `protobuf:"varint,9,opt,name=deliveryTimestamp,proto3" json:"deliveryTimestamp,omitempty"`
	ExpirationTimestamp int64             `protobuf:"varint,10,opt,name=expirationTimestamp,proto3" json:"expirationTimestamp,omitempty"`
	Flags               int32             `protobuf:"varint,11,opt,name=flags,proto3" json:"flags,omitempty"`
	Type                MailType          `protobuf:"varint,12,opt,name=type,proto3,enum=v1.MailType" json:"type,omitempty"`
	TemplateID          uint32            `protobuf:"varint,13,opt,name=templateID,proto3" json:"templateID,omitempty"`
	Stationery          MailStationery    `protobuf:"varint,14,opt,name=stationery,proto3,enum=v1.MailStationery" json:"stationery,omitempty"`
}

func (x *Mail) Reset() {
	*x = Mail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mail) ProtoMessage() {}

func (x *Mail) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mail.ProtoReflect.Descriptor instead.
func (*Mail) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{5}
}

func (x *Mail) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Mail) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *Mail) GetReceiverGuid() uint64 {
	if x != nil {
		return x.ReceiverGuid
	}
	return 0
}

func (x *Mail) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Mail) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Mail) GetMoneyToSend() int32 {
	if x != nil {
		return x.MoneyToSend
	}
	return 0
}

func (x *Mail) GetCashOnDelivery() int32 {
	if x != nil {
		return x.CashOnDelivery
	}
	return 0
}

func (x *Mail) GetAttachments() []*ItemAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Mail) GetDeliveryTimestamp() int64 {
	if x != nil {
		return x.DeliveryTimestamp
	}
	return 0
}

func (x *Mail) GetExpirationTimestamp() int64 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *Mail) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Mail) GetType() MailType {
	if x != nil {
		return x.Type
	}
	return MailType_PlayerToPlayer
}

func (x *Mail) GetTemplateID() uint32 {
	if x != nil {
		return x.TemplateID
	}
	return 0
}

func (x *Mail) GetStationery() MailStationery {
	if x != nil {
		return x.Stationery
	}
	return MailStationery_StUnused
}

type MarkAsReadForPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api        string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID    uint32 `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	PlayerGuid uint64 `protobuf:"varint,3,opt,name=playerGuid,proto3" json:"playerGuid,omitempty"`
	MailID     int32  `protobuf:"varint,4,opt,name=mailID,proto3" json:"mailID,omitempty"`
}

func (x *MarkAsReadForPlayerRequest) Reset() {
	*x = MarkAsReadForPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkAsReadForPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadForPlayerRequest) ProtoMessage() {}

func (x *MarkAsReadForPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadForPlayerRequest.ProtoReflect.Descriptor instead.
func (*MarkAsReadForPlayerRequest) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{6}
}

func (x *MarkAsReadForPlayerRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *MarkAsReadForPlayerRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *MarkAsReadForPlayerRequest) GetPlayerGuid() uint64 {
	if x != nil {
		return x.PlayerGuid
	}
	return 0
}

func (x *MarkAsReadForPlayerRequest) GetMailID() int32 {
	if x != nil {
		return x.MailID
	}
	return 0
}

type MarkAsReadForPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
}

func (x *MarkAsReadForPlayerResponse) Reset() {
	*x = MarkAsReadForPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkAsReadForPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadForPlayerResponse) ProtoMessage() {}

func (x *MarkAsReadForPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadForPlayerResponse.ProtoReflect.Descriptor instead.
func (*MarkAsReadForPlayerResponse) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{7}
}

func (x *MarkAsReadForPlayerResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

type MailByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api     string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID uint32 `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	MailID  int32  `protobuf:"varint,3,opt,name=mailID,proto3" json:"mailID,omitempty"`
}

func (x *MailByIDRequest) Reset() {
	*x = MailByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailByIDRequest) ProtoMessage() {}

func (x *MailByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailByIDRequest.ProtoReflect.Descriptor instead.
func (*MailByIDRequest) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{8}
}

func (x *MailByIDRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *MailByIDRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *MailByIDRequest) GetMailID() int32 {
	if x != nil {
		return x.MailID
	}
	return 0
}

type MailByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api  string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Mail *Mail  `protobuf:"bytes,2,opt,name=mail,proto3" json:"mail,omitempty"`
}

func (x *MailByIDResponse) Reset() {
	*x = MailByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailByIDResponse) ProtoMessage() {}

func (x *MailByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailByIDResponse.ProtoReflect.Descriptor instead.
func (*MailByIDResponse) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{9}
}

func (x *MailByIDResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *MailByIDResponse) GetMail() *Mail {
	if x != nil {
		return x.Mail
	}
	return nil
}

type RemoveMailItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api                  string  `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID              uint32  `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	PlayerGuid           *uint64 `protobuf:"varint,3,opt,name=playerGuid,proto3,oneof" json:"playerGuid,omitempty"`
	MailID               int32   `protobuf:"varint,4,opt,name=mailID,proto3" json:"mailID,omitempty"`
	ItemGuid             uint64  `protobuf:"varint,5,opt,name=itemGuid,proto3" json:"itemGuid,omitempty"`
	HandleCashOnDelivery bool    `protobuf:"varint,6,opt,name=handleCashOnDelivery,proto3" json:"handleCashOnDelivery,omitempty"`
}

func (x *RemoveMailItemRequest) Reset() {
	*x = RemoveMailItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMailItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMailItemRequest) ProtoMessage() {}

func (x *RemoveMailItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMailItemRequest.ProtoReflect.Descriptor instead.
func (*RemoveMailItemRequest) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveMailItemRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *RemoveMailItemRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *RemoveMailItemRequest) GetPlayerGuid() uint64 {
	if x != nil && x.PlayerGuid != nil {
		return *x.PlayerGuid
	}
	return 0
}

func (x *RemoveMailItemRequest) GetMailID() int32 {
	if x != nil {
		return x.MailID
	}
	return 0
}

func (x *RemoveMailItemRequest) GetItemGuid() uint64 {
	if x != nil {
		return x.ItemGuid
	}
	return 0
}

func (x *RemoveMailItemRequest) GetHandleCashOnDelivery() bool {
	if x != nil {
		return x.HandleCashOnDelivery
	}
	return false
}

type RemoveMailItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
}

func (x *RemoveMailItemResponse) Reset() {
	*x = RemoveMailItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMailItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMailItemResponse) ProtoMessage() {}

func (x *RemoveMailItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMailItemResponse.ProtoReflect.Descriptor instead.
func (*RemoveMailItemResponse) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveMailItemResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

type RemoveMailMoneyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api        string  `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID    uint32  `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	PlayerGuid *uint64 `protobuf:"varint,3,opt,name=playerGuid,proto3,oneof" json:"playerGuid,omitempty"`
	MailID     int32   `protobuf:"varint,4,opt,name=mailID,proto3" json:"mailID,omitempty"`
}

func (x *RemoveMailMoneyRequest) Reset() {
	*x = RemoveMailMoneyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMailMoneyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMailMoneyRequest) ProtoMessage() {}

func (x *RemoveMailMoneyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMailMoneyRequest.ProtoReflect.Descriptor instead.
func (*RemoveMailMoneyRequest) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveMailMoneyRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *RemoveMailMoneyRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *RemoveMailMoneyRequest) GetPlayerGuid() uint64 {
	if x != nil && x.PlayerGuid != nil {
		return *x.PlayerGuid
	}
	return 0
}

func (x *RemoveMailMoneyRequest) GetMailID() int32 {
	if x != nil {
		return x.MailID
	}
	return 0
}

type RemoveMailMoneyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api          string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	MoneyRemoved int32  `protobuf:"varint,2,opt,name=moneyRemoved,proto3" json:"moneyRemoved,omitempty"`
}

func (x *RemoveMailMoneyResponse) Reset() {
	*x = RemoveMailMoneyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMailMoneyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMailMoneyResponse) ProtoMessage() {}

func (x *RemoveMailMoneyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMailMoneyResponse.ProtoReflect.Descriptor instead.
func (*RemoveMailMoneyResponse) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveMailMoneyResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *RemoveMailMoneyResponse) GetMoneyRemoved() int32 {
	if x != nil {
		return x.MoneyRemoved
	}
	return 0
}

type DeleteMailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api     string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	RealmID uint32 `protobuf:"varint,2,opt,name=realmID,proto3" json:"realmID,omitempty"`
	MailID  int32  `protobuf:"varint,4,opt,name=mailID,proto3" json:"mailID,omitempty"`
}

func (x *DeleteMailRequest) Reset() {
	*x = DeleteMailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMailRequest) ProtoMessage() {}

func (x *DeleteMailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMailRequest.ProtoReflect.Descriptor instead.
func (*DeleteMailRequest) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteMailRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *DeleteMailRequest) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *DeleteMailRequest) GetMailID() int32 {
	if x != nil {
		return x.MailID
	}
	return 0
}

type DeleteMailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
}

func (x *DeleteMailResponse) Reset() {
	*x = DeleteMailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMailResponse) ProtoMessage() {}

func (x *DeleteMailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMailResponse.ProtoReflect.Descriptor instead.
func (*DeleteMailResponse) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteMailResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

var File_mail_proto protoreflect.FileDescriptor

var file_mail_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31,
	0x22, 0x84, 0x02, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x75, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64,
	0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53,
	0x65, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xb3, 0x04, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61,
	0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c,
	0x6d, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x47, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x54, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x54, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x61, 0x73, 0x68, 0x4f, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x4f, 0x6e, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x79, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x4d, 0x61, 0x73, 0x6b, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x38, 0x0a,
	0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x22, 0x63, 0x0a, 0x15, 0x4d, 0x61, 0x69, 0x6c, 0x73,
	0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x70, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x16,
	0x4d, 0x61, 0x69, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x1e, 0x0a, 0x05, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69,
	0x6c, 0x52, 0x05, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xec, 0x03, 0x0a, 0x04, 0x4d, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x54, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x54, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x61, 0x73, 0x68, 0x4f, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x4f, 0x6e, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x79, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x79, 0x22, 0x80, 0x01, 0x0a, 0x1a, 0x4d, 0x61, 0x72, 0x6b,
	0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x22, 0x2f, 0x0a, 0x1b, 0x4d, 0x61,
	0x72, 0x6b, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x22, 0x55, 0x0a, 0x0f, 0x4d,
	0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61,
	0x69, 0x6c, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c,
	0x49, 0x44, 0x22, 0x42, 0x0a, 0x10, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x1c, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6c,
	0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xdf, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x70, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x47, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x47, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43,
	0x61, 0x73, 0x68, 0x4f, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x61, 0x73, 0x68, 0x4f,
	0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x70, 0x69, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d,
	0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70,
	0x69, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x70, 0x69, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0x57, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69,
	0x6c, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49,
	0x44, 0x22, 0x26, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x2a, 0x57, 0x0a, 0x08, 0x4d, 0x61, 0x69,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54,
	0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x10, 0x05, 0x2a, 0x82, 0x01, 0x0a, 0x0e, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x65, 0x72, 0x79, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x74, 0x55, 0x6e, 0x75, 0x73, 0x65,
	0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74, 0x54, 0x65, 0x73, 0x74, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x53, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x29, 0x12, 0x08,
	0x0a, 0x04, 0x53, 0x74, 0x47, 0x4d, 0x10, 0x3d, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x74, 0x41, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x3e, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x56, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x10, 0x40, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x43, 0x68,
	0x72, 0x69, 0x73, 0x74, 0x6d, 0x61, 0x73, 0x10, 0x41, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x74, 0x4f,
	0x72, 0x70, 0x68, 0x61, 0x6e, 0x10, 0x43, 0x32, 0xe2, 0x03, 0x0a, 0x0b, 0x4d, 0x61, 0x69, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12,
	0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x69,
	0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61,
	0x69, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x12, 0x13, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x4d, 0x61, 0x69, 0x6c, 0x73, 0x46,
	0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x69, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x73, 0x46, 0x6f,
	0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b,
	0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_mail_proto_rawDescOnce sync.Once
	file_mail_proto_rawDescData = file_mail_proto_rawDesc
)

func file_mail_proto_rawDescGZIP() []byte {
	file_mail_proto_rawDescOnce.Do(func() {
		file_mail_proto_rawDescData = protoimpl.X.CompressGZIP(file_mail_proto_rawDescData)
	})
	return file_mail_proto_rawDescData
}

var file_mail_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_mail_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_mail_proto_goTypes = []interface{}{
	(MailType)(0),                       // 0: v1.MailType
	(MailStationery)(0),                 // 1: v1.MailStationery
	(*ItemAttachment)(nil),              // 2: v1.ItemAttachment
	(*SendRequest)(nil),                 // 3: v1.SendRequest
	(*SendResponse)(nil),                // 4: v1.SendResponse
	(*MailsForPlayerRequest)(nil),       // 5: v1.MailsForPlayerRequest
	(*MailsForPlayerResponse)(nil),      // 6: v1.MailsForPlayerResponse
	(*Mail)(nil),                        // 7: v1.Mail
	(*MarkAsReadForPlayerRequest)(nil),  // 8: v1.MarkAsReadForPlayerRequest
	(*MarkAsReadForPlayerResponse)(nil), // 9: v1.MarkAsReadForPlayerResponse
	(*MailByIDRequest)(nil),             // 10: v1.MailByIDRequest
	(*MailByIDResponse)(nil),            // 11: v1.MailByIDResponse
	(*RemoveMailItemRequest)(nil),       // 12: v1.RemoveMailItemRequest
	(*RemoveMailItemResponse)(nil),      // 13: v1.RemoveMailItemResponse
	(*RemoveMailMoneyRequest)(nil),      // 14: v1.RemoveMailMoneyRequest
	(*RemoveMailMoneyResponse)(nil),     // 15: v1.RemoveMailMoneyResponse
	(*DeleteMailRequest)(nil),           // 16: v1.DeleteMailRequest
	(*DeleteMailResponse)(nil),          // 17: v1.DeleteMailResponse
}
var file_mail_proto_depIdxs = []int32{
	2,  // 0: v1.SendRequest.attachments:type_name -> v1.ItemAttachment
	0,  // 1: v1.SendRequest.type:type_name -> v1.MailType
	1,  // 2: v1.SendRequest.stationery:type_name -> v1.MailStationery
	7,  // 3: v1.MailsForPlayerResponse.mails:type_name -> v1.Mail
	2,  // 4: v1.Mail.attachments:type_name -> v1.ItemAttachment
	0,  // 5: v1.Mail.type:type_name -> v1.MailType
	1,  // 6: v1.Mail.stationery:type_name -> v1.MailStationery
	7,  // 7: v1.MailByIDResponse.mail:type_name -> v1.Mail
	3,  // 8: v1.MailService.Send:input_type -> v1.SendRequest
	8,  // 9: v1.MailService.MarkAsReadForPlayer:input_type -> v1.MarkAsReadForPlayerRequest
	12, // 10: v1.MailService.RemoveMailItem:input_type -> v1.RemoveMailItemRequest
	14, // 11: v1.MailService.RemoveMailMoney:input_type -> v1.RemoveMailMoneyRequest
	10, // 12: v1.MailService.MailByID:input_type -> v1.MailByIDRequest
	5,  // 13: v1.MailService.MailsForPlayer:input_type -> v1.MailsForPlayerRequest
	16, // 14: v1.MailService.DeleteMail:input_type -> v1.DeleteMailRequest
	4,  // 15: v1.MailService.Send:output_type -> v1.SendResponse
	9,  // 16: v1.MailService.MarkAsReadForPlayer:output_type -> v1.MarkAsReadForPlayerResponse
	13, // 17: v1.MailService.RemoveMailItem:output_type -> v1.RemoveMailItemResponse
	15, // 18: v1.MailService.RemoveMailMoney:output_type -> v1.RemoveMailMoneyResponse
	11, // 19: v1.MailService.MailByID:output_type -> v1.MailByIDResponse
	6,  // 20: v1.MailService.MailsForPlayer:output_type -> v1.MailsForPlayerResponse
	17, // 21: v1.MailService.DeleteMail:output_type -> v1.DeleteMailResponse
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_mail_proto_init() }
func file_mail_proto_init() {
	if File_mail_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mail_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailsForPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailsForPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkAsReadForPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkAsReadForPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMailItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMailItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMailMoneyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMailMoneyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mail_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_mail_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_mail_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mail_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mail_proto_goTypes,
		DependencyIndexes: file_mail_proto_depIdxs,
		EnumInfos:         file_mail_proto_enumTypes,
		MessageInfos:      file_mail_proto_msgTypes,
	}.Build()
	File_mail_proto = out.File
	file_mail_proto_rawDesc = nil
	file_mail_proto_goTypes = nil
	file_mail_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MailServiceClient is the client API for MailService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MailServiceClient interface {
	Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error)
	MarkAsReadForPlayer(ctx context.Context, in *MarkAsReadForPlayerRequest, opts ...grpc.CallOption) (*MarkAsReadForPlayerResponse, error)
	RemoveMailItem(ctx context.Context, in *RemoveMailItemRequest, opts ...grpc.CallOption) (*RemoveMailItemResponse, error)
	RemoveMailMoney(ctx context.Context, in *RemoveMailMoneyRequest, opts ...grpc.CallOption) (*RemoveMailMoneyResponse, error)
	MailByID(ctx context.Context, in *MailByIDRequest, opts ...grpc.CallOption) (*MailByIDResponse, error)
	MailsForPlayer(ctx context.Context, in *MailsForPlayerRequest, opts ...grpc.CallOption) (*MailsForPlayerResponse, error)
	DeleteMail(ctx context.Context, in *DeleteMailRequest, opts ...grpc.CallOption) (*DeleteMailResponse, error)
}

type mailServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMailServiceClient(cc grpc.ClientConnInterface) MailServiceClient {
	return &mailServiceClient{cc}
}

func (c *mailServiceClient) Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error) {
	out := new(SendResponse)
	err := c.cc.Invoke(ctx, "/v1.MailService/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailServiceClient) MarkAsReadForPlayer(ctx context.Context, in *MarkAsReadForPlayerRequest, opts ...grpc.CallOption) (*MarkAsReadForPlayerResponse, error) {
	out := new(MarkAsReadForPlayerResponse)
	err := c.cc.Invoke(ctx, "/v1.MailService/MarkAsReadForPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailServiceClient) RemoveMailItem(ctx context.Context, in *RemoveMailItemRequest, opts ...grpc.CallOption) (*RemoveMailItemResponse, error) {
	out := new(RemoveMailItemResponse)
	err := c.cc.Invoke(ctx, "/v1.MailService/RemoveMailItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailServiceClient) RemoveMailMoney(ctx context.Context, in *RemoveMailMoneyRequest, opts ...grpc.CallOption) (*RemoveMailMoneyResponse, error) {
	out := new(RemoveMailMoneyResponse)
	err := c.cc.Invoke(ctx, "/v1.MailService/RemoveMailMoney", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailServiceClient) MailByID(ctx context.Context, in *MailByIDRequest, opts ...grpc.CallOption) (*MailByIDResponse, error) {
	out := new(MailByIDResponse)
	err := c.cc.Invoke(ctx, "/v1.MailService/MailByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailServiceClient) MailsForPlayer(ctx context.Context, in *MailsForPlayerRequest, opts ...grpc.CallOption) (*MailsForPlayerResponse, error) {
	out := new(MailsForPlayerResponse)
	err := c.cc.Invoke(ctx, "/v1.MailService/MailsForPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailServiceClient) DeleteMail(ctx context.Context, in *DeleteMailRequest, opts ...grpc.CallOption) (*DeleteMailResponse, error) {
	out := new(DeleteMailResponse)
	err := c.cc.Invoke(ctx, "/v1.MailService/DeleteMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MailServiceServer is the server API for MailService service.
type MailServiceServer interface {
	Send(context.Context, *SendRequest) (*SendResponse, error)
	MarkAsReadForPlayer(context.Context, *MarkAsReadForPlayerRequest) (*MarkAsReadForPlayerResponse, error)
	RemoveMailItem(context.Context, *RemoveMailItemRequest) (*RemoveMailItemResponse, error)
	RemoveMailMoney(context.Context, *RemoveMailMoneyRequest) (*RemoveMailMoneyResponse, error)
	MailByID(context.Context, *MailByIDRequest) (*MailByIDResponse, error)
	MailsForPlayer(context.Context, *MailsForPlayerRequest) (*MailsForPlayerResponse, error)
	DeleteMail(context.Context, *DeleteMailRequest) (*DeleteMailResponse, error)
}

// UnimplementedMailServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMailServiceServer struct {
}

func (*UnimplementedMailServiceServer) Send(context.Context, *SendRequest) (*SendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}
func (*UnimplementedMailServiceServer) MarkAsReadForPlayer(context.Context, *MarkAsReadForPlayerRequest) (*MarkAsReadForPlayerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkAsReadForPlayer not implemented")
}
func (*UnimplementedMailServiceServer) RemoveMailItem(context.Context, *RemoveMailItemRequest) (*RemoveMailItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMailItem not implemented")
}
func (*UnimplementedMailServiceServer) RemoveMailMoney(context.Context, *RemoveMailMoneyRequest) (*RemoveMailMoneyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMailMoney not implemented")
}
func (*UnimplementedMailServiceServer) MailByID(context.Context, *MailByIDRequest) (*MailByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MailByID not implemented")
}
func (*UnimplementedMailServiceServer) MailsForPlayer(context.Context, *MailsForPlayerRequest) (*MailsForPlayerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MailsForPlayer not implemented")
}
func (*UnimplementedMailServiceServer) DeleteMail(context.Context, *DeleteMailRequest) (*DeleteMailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMail not implemented")
}

func RegisterMailServiceServer(s *grpc.Server, srv MailServiceServer) {
	s.RegisterService(&_MailService_serviceDesc, srv)
}

func _MailService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MailService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServiceServer).Send(ctx, req.(*SendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailService_MarkAsReadForPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkAsReadForPlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServiceServer).MarkAsReadForPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MailService/MarkAsReadForPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServiceServer).MarkAsReadForPlayer(ctx, req.(*MarkAsReadForPlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailService_RemoveMailItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveMailItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServiceServer).RemoveMailItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MailService/RemoveMailItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServiceServer).RemoveMailItem(ctx, req.(*RemoveMailItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailService_RemoveMailMoney_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveMailMoneyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServiceServer).RemoveMailMoney(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MailService/RemoveMailMoney",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServiceServer).RemoveMailMoney(ctx, req.(*RemoveMailMoneyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailService_MailByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MailByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServiceServer).MailByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MailService/MailByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServiceServer).MailByID(ctx, req.(*MailByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailService_MailsForPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MailsForPlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServiceServer).MailsForPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MailService/MailsForPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServiceServer).MailsForPlayer(ctx, req.(*MailsForPlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailService_DeleteMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailServiceServer).DeleteMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MailService/DeleteMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailServiceServer).DeleteMail(ctx, req.(*DeleteMailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MailService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.MailService",
	HandlerType: (*MailServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _MailService_Send_Handler,
		},
		{
			MethodName: "MarkAsReadForPlayer",
			Handler:    _MailService_MarkAsReadForPlayer_Handler,
		},
		{
			MethodName: "RemoveMailItem",
			Handler:    _MailService_RemoveMailItem_Handler,
		},
		{
			MethodName: "RemoveMailMoney",
			Handler:    _MailService_RemoveMailMoney_Handler,
		},
		{
			MethodName: "MailByID",
			Handler:    _MailService_MailByID_Handler,
		},
		{
			MethodName: "MailsForPlayer",
			Handler:    _MailService_MailsForPlayer_Handler,
		},
		{
			MethodName: "DeleteMail",
			Handler:    _MailService_DeleteMail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mail.proto",
}
