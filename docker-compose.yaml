services:
  database-ac:
    image: mysql:8.4
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password # Inits default password for the root user
    volumes:
      - type: volume
        source: database_ac
        target: /var/lib/mysql
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=password --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 10s
      retries: 40
    profiles:
      - ac
      - setup-ac

  database-ac-import:
    build:
      context: .
      dockerfile: game-server/azerothcore/Dockerfile
      target: db-import
    environment:
      AC_LOGIN_DATABASE_INFO: "${AUTH_DB_HOST};${AUTH_DB_PORT};${AUTH_DB_USER};${AUTH_DB_PASS};${AUTH_DB_NAME}"
      AC_WORLD_DATABASE_INFO: "${WORLD_DB_HOST};${WORLD_DB_PORT};${WORLD_DB_USER};${WORLD_DB_PASS};${WORLD_DB_NAME}"
      AC_CHARACTER_DATABASE_INFO: "${CHAR_DB_HOST};${CHAR_DB_PORT};${CHAR_DB_USER};${CHAR_DB_PASS};${CHAR_DB_NAME}"
    depends_on:
      database-ac:
        condition: service_healthy
    profiles:
      - setup-ac
    
  database-migrations:
    image: mysql:8.4
    environment:
      CHAR_DB_HOST: "${CHAR_DB_HOST}"
    volumes:
      - ./sql/characters/mysql:/custom-sql
    depends_on:
      database_ac:
        condition: service_healthy
      database_ac_import:
        condition: service_completed_successfully
    working_dir: /custom-sql
    command: ["/bin/bash", "./migrations.bash"]
    profiles:
      - setup-ac

  client-data:
    image: acore/ac-wotlk-client-data:master
    volumes:
      - client_data:/azerothcore/env/dist/data
    profiles:
      - setup-ac

  download-worldserver-conf:
    image: alpine/curl:8.14.1
    volumes:
      - core_etc:/config
    command: >
      curl -L https://raw.githubusercontent.com/walkline/azerothcore-wotlk/master/src/server/apps/worldserver/worldserver.conf.dist
      -o /config/worldserver.conf
    profiles:
      - setup-ac
  
  gateway:
    build:
      context: .
      dockerfile: apps/gateway/Dockerfile
    ports:
      - "8333:8333"
      - "8085:8085"
      - "8900:8900"
      - "4000:4000"
    depends_on:
      - servers-registry
    environment:
      SERVERS_REGISTRY_SERVICE_ADDRESS: servers-registry:8999
      CHAR_SERVICE_ADDRESS: charserver:8087
      CHAT_SERVICE_ADDRESS: chatserver:8992
      GUILDS_SERVICE_ADDRESS: guildserver:8995
      MAIL_SERVICE_ADDRESS: mailserver:8997
      GROUP_SERVICE_ADDRESS: groupserver:8998
      MATCHMAKING_SERVICE_ADDRESS: matchmakingserver:8994
      AUTH_DB_CONNECTION: ${AUTH_DB_USER}:${AUTH_DB_PASS}@tcp(${AUTH_DB_HOST}:${AUTH_DB_PORT})/${AUTH_DB_NAME}
      DB_SCHEMA_TYPE: ${DATABASE_SCHEMA_TYPE}
      PREFERRED_HOSTNAME: ${EXTERNAL_ADDRESS}
      LOG_LEVEL: 0
      PORT: 8085
      NATS_URL: nats://nats:4222

  gateway-second:
    build:
      context: .
      dockerfile: apps/gateway/Dockerfile
    ports:
      - "8045:8045"
    depends_on:
      - servers-registry
    environment:
      SERVERS_REGISTRY_SERVICE_ADDRESS: servers-registry:8999
      CHAR_SERVICE_ADDRESS: charserver:8087
      CHAT_SERVICE_ADDRESS: chatserver:8992
      GUILDS_SERVICE_ADDRESS: guildserver:8995
      MAIL_SERVICE_ADDRESS: mailserver:8997
      GROUP_SERVICE_ADDRESS: groupserver:8998
      MATCHMAKING_SERVICE_ADDRESS: matchmakingserver:8994
      AUTH_DB_CONNECTION: ${AUTH_DB_USER}:${AUTH_DB_PASS}@tcp(${AUTH_DB_HOST}:${AUTH_DB_PORT})/${AUTH_DB_NAME}
      DB_SCHEMA_TYPE: ${DATABASE_SCHEMA_TYPE}
      PREFERRED_HOSTNAME: ${EXTERNAL_ADDRESS}
      LOG_LEVEL: 0
      PORT: 8045
      NATS_URL: nats://nats:4222

  servers-registry:
    build:
      context: .
      dockerfile: apps/servers-registry/Dockerfile
    ports:
      - "8999:8999"
    depends_on:
      - redis
    environment:
      PORT: 8999
      REDIS_URL: redis://:@redis:6379/0

  authserver:
    build:
      context: .
      dockerfile: apps/authserver/Dockerfile
    ports:
      - "3724:3724"
    environment:
      PORT: 3724
      AUTH_DB_CONNECTION: ${AUTH_DB_USER}:${AUTH_DB_PASS}@tcp(${AUTH_DB_HOST}:${AUTH_DB_PORT})/${AUTH_DB_NAME}
      DB_SCHEMA_TYPE: ${DATABASE_SCHEMA_TYPE}
      SERVERS_REGISTRY_SERVICE_ADDRESS: servers-registry:8999

  charserver:
    build:
      context: .
      dockerfile: apps/charserver/Dockerfile
    ports:
      - "8087:8087"
    environment:
      PORT: 8087
      CHAR_DB_CONNECTION: 1:${CHAR_DB_USER}:${CHAR_DB_PASS}@tcp(${CHAR_DB_HOST}:${CHAR_DB_PORT})/${CHAR_DB_NAME}
      WORLD_DB_CONNECTION: ${WORLD_DB_USER}:${WORLD_DB_PASS}@tcp(${WORLD_DB_HOST}:${WORLD_DB_PORT})/${WORLD_DB_NAME}

  chatserver:
    build:
      context: .
      dockerfile: apps/chatserver/Dockerfile
    environment:
      NATS_URL: nats://nats:4222
      PORT: 8992

  guildserver:
    build:
      context: .
      dockerfile: apps/guildserver/Dockerfile
    depends_on:
      - nats
    environment:
      CHAR_DB_CONNECTION: 1:${CHAR_DB_USER}:${CHAR_DB_PASS}@tcp(${CHAR_DB_HOST}:${CHAR_DB_PORT})/${CHAR_DB_NAME}
      NATS_URL: nats://nats:4222
      PORT: 8995

  guidserver:
    build:
      context: .
      dockerfile: apps/guidserver/Dockerfile
    depends_on:
      - redis
    environment:
      CHAR_DB_CONNECTION: 1:${CHAR_DB_USER}:${CHAR_DB_PASS}@tcp(${CHAR_DB_HOST}:${CHAR_DB_PORT})/${CHAR_DB_NAME}
      REDIS_URL: redis://:@redis:6379/0
      PORT: 8996
    ports:
      - '8996:8996'

  mailserver:
    build:
      context: .
      dockerfile: apps/mailserver/Dockerfile
    environment:
      CHAR_DB_CONNECTION: 1:${CHAR_DB_USER}:${CHAR_DB_PASS}@tcp(${CHAR_DB_HOST}:${CHAR_DB_PORT})/${CHAR_DB_NAME}
      NATS_URL: nats://nats:4222
      PORT: 8997
    ports:
      - '8997:8997'

  groupserver:
    build:
      context: .
      dockerfile: apps/groupserver/Dockerfile
    environment:
      CHAR_DB_CONNECTION: 1:${CHAR_DB_USER}:${CHAR_DB_PASS}@tcp(${CHAR_DB_HOST}:${CHAR_DB_PORT})/${CHAR_DB_NAME}
      NATS_URL: nats://nats:4222
      PORT: 8998
    ports:
      - '8998:8998'

  matchmakingserver:
    build:
      context: .
      dockerfile: apps/matchmakingserver/Dockerfile
    environment:
      CHAR_DB_CONNECTION: 1:${CHAR_DB_USER}:${CHAR_DB_PASS}@tcp(${CHAR_DB_HOST}:${CHAR_DB_PORT})/${CHAR_DB_NAME}
      WORLD_DB_CONNECTION: ${WORLD_DB_USER}:${WORLD_DB_PASS}@tcp(${WORLD_DB_HOST}:${WORLD_DB_PORT})/${WORLD_DB_NAME}
      SERVERS_REGISTRY_SERVICE_ADDRESS: servers-registry:8999
      BATTLE_GROUPS: 1:1
      NATS_URL: nats://nats:4222
      PORT: 8994
    ports:
      - '8994:8994'

  gameserver_tc:
    build:
      context: .
      dockerfile: game-server/trinitycore/Dockerfile
    volumes:
      - core_etc:/repo/bin/etc
      - client_data:/data
    environment:
      TC_LOGIN_DATABASE_INFO: ${AUTH_DB_HOST};${AUTH_DB_PORT};${AUTH_DB_USER};${AUTH_DB_PASS};${AUTH_DB_NAME}
      TC_WORLD_DATABASE_INFO: ${WORLD_DB_HOST};${WORLD_DB_PORT};${WORLD_DB_USER};${WORLD_DB_PASS};${WORLD_DB_NAME}
      TC_CHARACTER_DATABASE_INFO: ${CHAR_DB_HOST};${CHAR_DB_PORT};${CHAR_DB_USER};${CHAR_DB_PASS};${CHAR_DB_NAME}
      TC_CONSOLE_ENABLE: 0
      TC_RA_ENABLE: 0
      TC_SOAP_ENABLE: 0
      TC_DATA_DIR: /data
      CHARACTER_GUIDS_BUFFER_SIZE: 5
      ITEM_GUIDS_BUFFER_SIZE: 50
      NATS_URL: nats://nats:4222
      GRPC_PORT: 9509
      GUID_PROVIDER_SERVICE_ADDRESS: guidserver:8996
      SERVERS_REGISTRY_SERVICE_ADDRESS: servers-registry:8999
    profiles:
      - tc

  gameserver_ac:
    build:
      context: .
      dockerfile: game-server/azerothcore/Dockerfile
      target: gameserver
    volumes:
      - core_etc:/repo/bin/etc
      - client_data:/data
    environment:
      AC_LOGIN_DATABASE_INFO: ${AUTH_DB_HOST};${AUTH_DB_PORT};${AUTH_DB_USER};${AUTH_DB_PASS};${AUTH_DB_NAME}
      AC_WORLD_DATABASE_INFO: ${WORLD_DB_HOST};${WORLD_DB_PORT};${WORLD_DB_USER};${WORLD_DB_PASS};${WORLD_DB_NAME}
      AC_CHARACTER_DATABASE_INFO: ${CHAR_DB_HOST};${CHAR_DB_PORT};${CHAR_DB_USER};${CHAR_DB_PASS};${CHAR_DB_NAME}
      AC_CONSOLE_ENABLE: 0
      AC_RA_ENABLE: 0
      AC_SOAP_ENABLE: 0
      AC_DATA_DIR: /data
      AC_CLUSTER_ENABLED: 1
      CHARACTER_GUIDS_BUFFER_SIZE: 5
      ITEM_GUIDS_BUFFER_SIZE: 50
      NATS_URL: nats://nats:4222
      GRPC_PORT: 9509
      GUID_PROVIDER_SERVICE_ADDRESS: guidserver:8996
      SERVERS_REGISTRY_SERVICE_ADDRESS: servers-registry:8999
      MATCHMAKING_SERVICE_ADDRESS: matchmakingserver:8994
    profiles:
      - ac

  nats:
    image: nats:2.10-alpine
#    expose:
#      - "4222"
#    ports:
#      - "4222:4222"
#      - "8222:8222"
    hostname: nats-server

  redis:
    image: redis:7.2-alpine
#    ports:
#      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./cache:/data

volumes:
  database_ac:
  client_data:
  core_etc: